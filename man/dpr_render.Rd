% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build.R
\name{dpr_render}
\alias{dpr_render}
\title{dpr_render}
\usage{
dpr_render(path = ".", ...)
}
\arguments{
\item{path}{The relative path to the data package. The default is the working
directory.}

\item{...}{\code{datapackager.yml} value overrides. When arguments are
specified, those arguments are used as the YAML key value pairs instead of
what is specified by the \code{datapackager.yml} file. For a list of those
key value pairs and their purposes, see \code{?dpr_yaml_defaults}.}
}
\value{
does not return anything but performs rendering, processing and
data-saving operations as defined in \code{datapackager.yml}
}
\description{
Process and render all processing scripts defined in the \code{datapackager.yml}
configuration file. Does not build or install the data package. For full
package build and installation, use the \code{dpr_build} function.
}
\details{
\code{dpr_render} is the primary process that renders processing
scripts to vignettes and data. This function can be run in two modes:
isolate or share. This mode is set in the \code{datapackager.yml} file's
\code{render_env_mode}'s value.  When the \code{isolate} mode is set, each
processing script is run in a separate R session. When the \code{share}
mode is set, each process is run in the same session, which enables each
process to use variables defined by previous processing scripts for the
current \code{dpr_render} call.
}
\author{
jmtaylor
}
